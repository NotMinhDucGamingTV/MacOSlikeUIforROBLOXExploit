local NotMacOSUI = {}
-----------------------------------------------------------------------------------------
function NotMacOSUI:Window()
	--Ui Table:
	local Ui = {}	
	local Opened = true
	--Service:
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	--UI Component:
	local NotMacOSGui = Instance.new("ScreenGui")
	local Main = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Control = Instance.new("Folder")
	local Misc = Instance.new("Folder")
	local Close = Instance.new("TextButton")
	local Tabs = Instance.new("Frame")
	local Scroll_2 = Instance.new("ScrollingFrame")
	local ContentFixer_2 = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local MainTopbar = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	--UI Properties:
	NotMacOSGui.Name = "NotMacOSGui"
	NotMacOSGui.Parent = game.CoreGui
	NotMacOSGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Main.Name = "Main"
	Main.Parent = NotMacOSGui
	Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Main.BackgroundTransparency = 0.150
	Main.ClipsDescendants = true
	Main.Position = UDim2.new(0.0629921257, 0, 0.0415841602, 0)
	Main.Size = UDim2.new(0, 574, 0, 274)
	UICorner.CornerRadius = UDim.new(0, 10)
	UICorner.Parent = Main
	Control.Name = "Control"
	Control.Parent = Main
	Misc.Name = "Misc"
	Misc.Parent = Main
	Close.Name = "Close"
	Close.Parent = Control
	Close.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Close.Position = UDim2.new(0.00896057393, 1, 0.0218978096, -1)
	Close.Size = UDim2.new(0, 10, 0, 10)
	Close.Font = Enum.Font.SourceSans
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(0, 0, 0)
	Close.TextSize = 14.000
	Close.MouseButton1Click:Connect(function()
		game.Debris:AddItem(NotMacOSGui,0.001)	
	end)
	Tabs.Name = "Tabs"
	Tabs.Parent = Main
	Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0.0191637632, 0, 0.100897796, 0)
	Tabs.Size = UDim2.new(0, 101, 0, 230)
	Scroll_2.Name = "Scroll"
	Scroll_2.Parent = Tabs
	Scroll_2.Active = true
	Scroll_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Scroll_2.BackgroundTransparency = 1.000
	Scroll_2.BorderSizePixel = 0
	Scroll_2.Size = UDim2.new(1, 0, 1, 0)
	Scroll_2.CanvasSize = UDim2.new(0, 0, 0, 0)
	ContentFixer_2.Name = "ContentFixer"
	ContentFixer_2.Parent = Scroll_2
	ContentFixer_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ContentFixer_2.BackgroundTransparency = 1.000
	ContentFixer_2.Size = UDim2.new(1, 0, 1, 0)
	MainTopbar.Name = "MainTopbar"
	MainTopbar.Parent = Main
	MainTopbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	MainTopbar.BackgroundTransparency = 1.000
	MainTopbar.Size = UDim2.new(1, 0, 0.0799999982, 0)
	UICorner_3.CornerRadius = UDim.new(10, 0)
	UICorner_3.Parent = Close
	UIListLayout.Parent = ContentFixer_2
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0.00499999989, 0)
	--Ui Function:
	local function MakeDraggable(topbarobject, object)
		local Dragging = nil
		local DragInput = nil
		local DragStart = nil
		local StartPosition = nil
		local function Update(input)
			local Delta = input.Position - DragStart
			local pos =	UDim2.new(StartPosition.X.Scale,StartPosition.X.Offset + Delta.X,StartPosition.Y.Scale,StartPosition.Y.Offset + Delta.Y)
			object.Position = pos
		end
		topbarobject.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)
		topbarobject.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch	then
				DragInput = input
			end
		end)
		UserInputService.InputChanged:Connect(function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end)
	end
	UserInputService.InputBegan:Connect(function(input)
		if Input.KeyCode == Enum.KeyCode.LeftControl then
		Opened = not Opened
		Main.Visible = Opened
		end
	end)
	MakeDraggable(MainTopbar,Main)
	function Ui:Tabs(Names:string,Id:string)
		--UI Table:
		local TabTable = {}
		TabTable.RecentTabs = nil
		--UI Instance
		local Panel = Instance.new("Frame")
		local UICorner_2 = Instance.new("UICorner")
		local SquareFX = Instance.new("Frame")
		local Title = Instance.new("TextLabel")
		local Back = Instance.new("TextButton")
		local Forward = Instance.new("TextButton")
		local PlaceHolder = Instance.new("Frame")
		local Scroll = Instance.new("ScrollingFrame")
		local ContentFixer = Instance.new("Frame")
		local Panel_2 = Instance.new("Frame")
		local Icon = Instance.new("ImageLabel")
		local Title_2 = Instance.new("TextLabel")
		local Button = Instance.new("TextButton")
		local UIListLayout_2 = Instance.new("UIListLayout")
		--UI Property:
		Panel.Name = Names
		Panel.Parent = Main
		Panel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Panel.BorderSizePixel = 0
		Panel.Position = UDim2.new(0.210801393, 0, 0, 0)
		Panel.Size = UDim2.new(0, 452, 0, 274)
		UICorner_2.CornerRadius = UDim.new(0, 10)
		UICorner_2.Parent = Panel
		SquareFX.Name = "SquareFX"
		SquareFX.Parent = Panel
		SquareFX.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SquareFX.BorderSizePixel = 0
		SquareFX.Size = UDim2.new(0, 14, 0, 276)
		Title.Name = "Title"
		Title.Parent = Panel
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BorderSizePixel = 0
		Title.Position = UDim2.new(0.159292042, 0, 0.0218978096, 0)
		Title.Size = UDim2.new(0.333643049, 0, 0.0790000185, 0)
		Title.Font = Enum.Font.SourceSansSemibold
		Title.Text = Names
		Title.TextColor3 = Color3.fromRGB(0, 0, 0)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextTransparency = 0.250
		Title.TextWrapped = true
		Title.TextXAlignment = Enum.TextXAlignment.Left
		Back.Name = "Back"
		Back.Parent = Panel
		Back.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Back.BackgroundTransparency = 1.000
		Back.Position = UDim2.new(0.0376106203, 0, 0.0255474448, 0)
		Back.Size = UDim2.new(0.0469999984, 0, 0.0790000036, 0)
		Back.Font = Enum.Font.SourceSansSemibold
		Back.Text = "<"
		Back.TextColor3 = Color3.fromRGB(159, 159, 159)
		Back.TextScaled = true
		Back.TextSize = 14.000
		Back.TextWrapped = true
		Forward.Name = "Forward"
		Forward.Parent = Panel
		Forward.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Forward.BackgroundTransparency = 1.000
		Forward.Position = UDim2.new(0.0929999873, 0, 0.0255474448, 0)
		Forward.Size = UDim2.new(0.0464601777, 0, 0.0768256113, 0)
		Forward.Font = Enum.Font.SourceSansSemibold
		Forward.Text = ">"
		Forward.TextColor3 = Color3.fromRGB(159, 159, 159)
		Forward.TextScaled = true
		Forward.TextSize = 14.000
		Forward.TextWrapped = true
		PlaceHolder.Name = "PlaceHolder"
		PlaceHolder.Parent = Panel
		PlaceHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		PlaceHolder.BorderSizePixel = 0
		PlaceHolder.Position = UDim2.new(0.0376106203, 0, 0.102189779, 0)
		PlaceHolder.Size = UDim2.new(0, 418, 0, 230)
		Scroll.Name = "Scroll"
		Scroll.Parent = PlaceHolder
		Scroll.Active = true
		Scroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Scroll.BorderSizePixel = 0
		Scroll.Size = UDim2.new(1, 0, 1, 0)
		Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
		ContentFixer.Name = "ContentFixer"
		ContentFixer.Parent = Scroll
		ContentFixer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ContentFixer.Size = UDim2.new(1, 0, 1, 0)
		Panel_2.Name = "Panel"
		Panel_2.Parent = ContentFixer_2
		Panel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Panel_2.BackgroundTransparency = 1.000
		Panel_2.BorderSizePixel = 0
		Panel_2.Position = UDim2.new(0, 0, 0.0217391308, 0)
		Panel_2.Size = UDim2.new(1, 0, 0.0260869563, 20)
		Icon.Name = "Icon"
		Icon.Parent = Panel_2
		Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Icon.BackgroundTransparency = 1.000
		Icon.ImageColor3 = Color3.new(0,0,0)
		Icon.BorderSizePixel = 0
		Icon.Image = Id or "rbxassetid://4034483344"
		Icon.Position = UDim2.new(0.0379999988, 0, 0.115000002, 0)
		Icon.Size = UDim2.new(0, 20, 0, 20)
		Title_2.Name = "Title"
		Title_2.Parent = Panel_2
		Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title_2.BackgroundTransparency = 1.000
		Title_2.Position = UDim2.new(0.326732665, 0, 0.115384616, 0)
		Title_2.Size = UDim2.new(0.594059408, 0, 0.769230783, 0)
		Title_2.Font = Enum.Font.SourceSansLight
		Title_2.Text = Names
		Title_2.TextColor3 = Color3.fromRGB(0, 0, 0)
		Title_2.TextScaled = true
		Title_2.TextSize = 14.000
		Title_2.TextWrapped = true
		Button.Name = "Button"
		Button.Parent = Panel_2
		Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Button.BackgroundTransparency = 1.000
		Button.Size = UDim2.new(1, 0, 1, 0)
		Button.Font = Enum.Font.SourceSans
		Button.Text = ""
		Button.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button.TextSize = 14.000
		Button.MouseButton1Click:Connect(function()
			_G.CurrentTabs.Visible,_G.CurrentActiveTabControl.Transparency = false,1
			Panel.Visible = true
			Panel_2.Transparency = 0
			Panel_2.BackgroundColor3 = Color3.fromRGB(247, 247, 247)
			_G.RecentlyActiveTab,_G.RecentlyActiveTabControl = _G.CurrentTabs,_G.CurrentActiveTabControl
			_G.CurrentTabs,_G.CurrentActiveTabControl = Panel,Panel_2
		end)
		UIListLayout_2.Parent = ContentFixer
		UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_2.Padding = UDim.new(0.00499999989, 0)
		if _G.RecentTabs ~= nil then
			Panel.Visible = false
			_G.RecentTabs,_G.RecentTabsControl = Panel,Panel_2
		elseif _G.RecentTabs == nil then
			Panel.Visible = true
			Panel_2.BackgroundColor3 = Color3.fromRGB(247, 247, 247)
			Panel_2.Transparency = 0
			_G.CurrentTabs,_G.CurrentActiveTabControl = Panel,Panel_2
			_G.RecentTabs,_G.RecentTabsControl = Panel,Panel_2
		end
		function TabTable:Slider(SliderName:string,MinValue:number,MaxValue:number,StartValue:number,Callback)
			--Ui Component:
			local Slider = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local SliderFrame = Instance.new("Frame")
			local UICorner_2 = Instance.new("UICorner")
			local Slider_2 = Instance.new("TextButton")
			local UICorner_3 = Instance.new("UICorner")
			local SliderTitle = Instance.new("TextLabel")
			local Value = Instance.new("TextLabel")
			local dragging = false
			local snapAmount = 1
			local pixelsFromEdge = 2
			--UI Properties:
			Slider.Name = SliderName
			Slider.Parent = ContentFixer
			Slider.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
			Slider.BorderSizePixel = 0
			Slider.Size = UDim2.new(1, 0, 0.196652547, 0)
			UICorner.CornerRadius = UDim.new(0, 10)
			UICorner.Parent = Slider
			SliderFrame.Name = "SliderFrame"
			SliderFrame.Parent = Slider
			SliderFrame.BackgroundColor3 = Color3.fromRGB(180, 180, 180)
			SliderFrame.BorderSizePixel = 0
			SliderFrame.Position = UDim2.new(0.0215311013, 0, 0.596947789, 0)
			SliderFrame.Size = UDim2.new(0.954545617, 0, 0.251027673, 0)
			UICorner_2.CornerRadius = UDim.new(0, 10)
			UICorner_2.Parent = SliderFrame
			Slider_2.Name = "Slider"
			Slider_2.Parent = SliderFrame
			Slider_2.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
			Slider_2.Size = UDim2.new(0, 11, 0, 11)
			Slider_2.Font = Enum.Font.SourceSans
			Slider_2.Text = ""
			Slider_2.TextColor3 = Color3.fromRGB(0, 0, 0)
			Slider_2.TextSize = 14.000
			UICorner_3.CornerRadius = UDim.new(0, 10)
			UICorner_3.Parent = Slider_2
			SliderTitle.Name = "Title"
			SliderTitle.Parent = SliderFrame
			SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderTitle.BackgroundTransparency = 1.000
			SliderTitle.Position = UDim2.new(0.0125313262, 0, -2.02571702, 0)
			SliderTitle.Size = UDim2.new(0, 193, 0, 20)
			SliderTitle.Font = Enum.Font.SourceSansLight
			SliderTitle.Text = SliderName
			SliderTitle.TextColor3 = Color3.fromRGB(0, 0, 0)
			SliderTitle.TextScaled = true
			SliderTitle.TextSize = 14.000
			SliderTitle.TextTransparency = 0.150
			SliderTitle.TextWrapped = true
			SliderTitle.TextXAlignment = Enum.TextXAlignment.Left
			Value.Name = "Value"
			Value.Parent = SliderFrame
			Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Value.BackgroundTransparency = 1.000
			Value.Position = UDim2.new(0.788999975, 0, -2.02600002, 0)
			Value.Size = UDim2.new(0, 82, 0, 20)
			Value.Font = Enum.Font.SourceSansLight
			Value.TextColor3 = Color3.fromRGB(0, 0, 0)
			Value.TextScaled = true
			Value.TextSize = 14.000
			Value.TextTransparency = 1
			Value.Visible = false
			Value.TextWrapped = true
			Value.TextXAlignment = Enum.TextXAlignment.Right
			local function move(input)
				local pos =
					UDim2.new(
						math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1),
						-5,
						0,
						0
					)
				Slider_2.Position = pos
				local value = math.floor(((pos.X.Scale * MaxValue) / MaxValue) * (MaxValue - MinValue) + MinValue)
				Value.Text = tostring(value) 
				pcall(Callback, value)
			end
			Slider_2.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
					local tween = game:GetService("TweenService"):Create(Value,TweenInfo.new(.15),{TextTransparency = 0,Visible = true})
					tween:Play()
					end
				end)
			Slider_2.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
					local tween = game:GetService("TweenService"):Create(Value,TweenInfo.new(.5),{TextTransparency = 1,Visible = false})
					tween:Play()
					end
				end)
			game:GetService("UserInputService").InputChanged:Connect(function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					move(input)
				end
			end)
			Scroll.CanvasSize = UDim2.new(0,0,0,UIListLayout_2.AbsoluteContentSize.Y)
		end
		function TabTable:Text(Text:string)
			--Ui Table:
			local TextTable = {}
			--Ui Component:
			local TextLabel = Instance.new("TextLabel")
			--Ui Properties:
			TextLabel.Parent = ContentFixer
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.Position = UDim2.new(0.031100478, 0, 0.200000003, 0)
			TextLabel.Size = UDim2.new(0.936834455, 0, 0.0956521705, 0)
			TextLabel.Font = Enum.Font.SourceSansLight
			TextLabel.Text = Text
			TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextLabel.TextSize = 14.000
			TextLabel.TextWrapped = true
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			function TextTable:ChangeText(Texttochange)
				TextLabel.Text = Texttochange
			end
			Scroll.CanvasSize = UDim2.new(0,0,0,UIListLayout_2.AbsoluteContentSize.Y)
			return TextTable
		end
		function TabTable:Seperator()
			--Ui Component:
			local Sperator = Instance.new("Frame")
			local Sperator2 = Instance.new("Frame")
			--Ui Properties
			Sperator.Name = "Seperator1"
			Sperator.Parent = ContentFixer
			Sperator.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Sperator.BorderSizePixel = 0
			Sperator.Position = UDim2.new(0.00478468882, 0, 0.278260857, 0)
			Sperator.Size = UDim2.new(0, 413, 0, 1)
			Sperator2.Name = "Seperator1-2"
			Sperator2.Parent = ContentFixer
			Sperator2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Sperator2.BorderSizePixel = 0
			Sperator2.Transparency = 1
			Sperator2.Position = UDim2.new(0.00478468882, 0, 0.278260857, 0)
			Sperator2.Size = UDim2.new(0, 413, 0, 3)
			Scroll.CanvasSize = UDim2.new(0,0,0,UIListLayout_2.AbsoluteContentSize.Y)
		end
		function TabTable:Dropdown(TitleText:string,Content,Callback)
			--Ui Table:
			local DropdownTable = {}
			--Ui Component:
			local Dropdown = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local Header = Instance.new("Frame")
			local HeaderClick = Instance.new("TextButton")
			local UICorner_2 = Instance.new("UICorner")
			local Selected = Instance.new("TextLabel")
			local ImageLabel = Instance.new("ImageLabel")
			local Scroll = Instance.new("ScrollingFrame")
			local Frame = Instance.new("Frame")
			local UIListLayout = Instance.new("UIListLayout")
			local TextLabel = Instance.new("TextLabel")
			local open = false
			--Ui Poperties:
			Dropdown.Name = "Dropdown"
			Dropdown.Parent = ContentFixer
			Dropdown.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
			Dropdown.BorderSizePixel = 0
			Dropdown.ClipsDescendants = true
			Dropdown.Position = UDim2.new(-0.00239234441, 0, 0.134782612, 0)
			Dropdown.Size = UDim2.new(1, 0,0.205, 0)
			UICorner.CornerRadius = UDim.new(0, 10)
			UICorner.Parent = Dropdown
			Header.Name = "Header"
			Header.Parent = Dropdown
			Header.BackgroundColor3 = Color3.fromRGB(194, 194, 194)
			Header.BorderSizePixel = 0
			Header.Position = UDim2.new(0, 0, 0, 19)
			Header.Size = UDim2.new(0, 418, 0, 29)
			UICorner_2.CornerRadius = UDim.new(0, 10)
			UICorner_2.Parent = Header
			Selected.Name = "Selected"
			Selected.Parent = Header
			Selected.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Selected.BackgroundTransparency = 1.000
			Selected.Position = UDim2.new(0, 14, 0, 3)
			Selected.Size = UDim2.new(0.35645932, 0, 0.793103456, 0)
			Selected.Font = Enum.Font.SourceSansLight
			Selected.Text = "Select"
			Selected.TextColor3 = Color3.fromRGB(0, 0, 0)
			Selected.TextScaled = true
			Selected.TextSize = 14.000
			Selected.TextWrapped = true
			Selected.TextXAlignment = Enum.TextXAlignment.Left
			ImageLabel.Parent = Header
			ImageLabel.BackgroundTransparency = 1.000
			ImageLabel.Position = UDim2.new(0, 396, 0, 9)
			ImageLabel.Size = UDim2.new(0, 10, 0, 10)
			ImageLabel.Image = "rbxassetid://2038928570"
			ImageLabel.ImageColor3 = Color3.fromRGB(0, 0, 0)
			Scroll.Name = "Scroll"
			Scroll.Parent = Dropdown
			Scroll.Active = true
			Scroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Scroll.BackgroundTransparency = 1.000
			Scroll.BorderSizePixel = 0
			Scroll.Position = UDim2.new(0, 3, 0, 53)
			Scroll.Size = UDim2.new(0, 411, 0, 97)
			Scroll.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
			Scroll.CanvasPosition = Vector2.new(0, 3)
			Scroll.CanvasSize = UDim2.new(0, 0, 0, 100)
			Scroll.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
			Frame.Parent = Scroll
			Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Frame.Size = UDim2.new(1, 0, 1, 0)
			UIListLayout.Parent = Frame
			UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout.Padding = UDim.new(0.00499999989, 0)
			TextLabel.Parent = Dropdown
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.Position = UDim2.new(0, 12, 0, 0)
			TextLabel.Size = UDim2.new(0, 217, 0, 19)
			TextLabel.Font = Enum.Font.SourceSansSemibold
			TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextLabel.TextScaled = true
			TextLabel.TextSize = 14.000
			TextLabel.TextWrapped = true
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			TextLabel.Text = TitleText
			HeaderClick.Parent = Header
			HeaderClick.BackgroundTransparency = 1
			HeaderClick.Text = ""
			HeaderClick.Size = UDim2.new(1,0,1,0)
			HeaderClick.MouseButton1Click:Connect(function()
				if open == false then
					Dropdown:TweenSize(UDim2.new(1, 0, 0.692304671, 0),Enum.EasingDirection.In,Enum.EasingStyle.Linear,.25)
					open = true
					Scroll.CanvasSize = UDim2.new(0,0,0,UIListLayout_2.AbsoluteContentSize.Y)
				elseif open == true then
					Dropdown:TweenSize(UDim2.new(1, 0,0.205, 0),Enum.EasingDirection.In,Enum.EasingStyle.Linear,.25)
					open = false
					Scroll.CanvasSize = UDim2.new(0,0,0,UIListLayout_2.AbsoluteContentSize.Y)
				end
			end)
			if type(Content) == "table" then
				for i,v in pairs(Content) do
					local textbtn = Instance.new("TextButton")
					textbtn.Parent = Frame
					textbtn.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
					textbtn.Name = "ListItem"
					textbtn.Text = v
					textbtn.Size = UDim2.new(1,0,0,20)
					textbtn.BorderSizePixel = 0
					textbtn.MouseButton1Click:Connect(function()
						Selected.Text = v
						Callback(v)
					end)
				end
			end
			function DropdownTable:RefreshContent(NewContent)
				for i,v in pairs(Frame:GetChildren()) do
					if v.Name == "ListItem" then
						game.Debris:AddItem(v,0.001)
					end
				end
				if type(NewContent) == "table" then
					for i,v in pairs(NewContent) do
						local textbtn = Instance.new("TextButton")
						textbtn.Parent = Frame
						textbtn.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
						textbtn.Name = "ListItem"
						textbtn.Text = v
						textbtn.Size = UDim2.new(1,0,0,20)
						textbtn.BorderSizePixel = 0
						textbtn.MouseButton1Click:Connect(function()
							Selected.Text = v
							Callback(v)
						end)
					end
				end
			end
			return DropdownTable
		end
		function TabTable:Button(Text:string,Callback)
			--Ui Component:
			local Button = Instance.new("TextButton")
			local UICorner = Instance.new("UICorner")
			--Ui Properties:
			Button.Name = "Button"
			Button.Parent = ContentFixer
			Button.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
			Button.Position = UDim2.new(0.258373201, 0, 0.769565225, 0)
			Button.Size = UDim2.new(1, 0, 0, 40)
			Button.Font = Enum.Font.SourceSansLight
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 30.000
			Button.TextWrapped = true
			UICorner.CornerRadius = UDim.new(0, 10)
			UICorner.Parent = Button
			Button.MouseButton1Click:Connect(function()
				Callback()
			end)
		end
		function TabTable:Toggle(Text:string,Callback)
			--Ui Component:
			local Toggle = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local ToggleButton = Instance.new("Frame")
			local UICorner_2 = Instance.new("UICorner")
			local Buttom = Instance.new("Frame")
			local UICorner_3 = Instance.new("UICorner")
			local Title = Instance.new("TextLabel")
			local Btn = Instance.new("TextButton")
			local toggled = false
			local debounce = false
			--Ui Properties:
			Toggle.Name = "Toggle"
			Toggle.Parent = ContentFixer
			Toggle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
			Toggle.BorderSizePixel = 0
			Toggle.Position = UDim2.new(-0.00239234441, 0, 0.12608695, 0)
			Toggle.Size = UDim2.new(0, 418, 0, 29)
			UICorner.CornerRadius = UDim.new(0, 10)
			UICorner.Parent = Toggle
			ToggleButton.Name = "ToggleButton"
			ToggleButton.Parent = Toggle
			ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleButton.Position = UDim2.new(0.866028726, 0, 0.275862068, 0)
			ToggleButton.Size = UDim2.new(0, 35, 0, 15)
			UICorner_2.CornerRadius = UDim.new(0, 10)
			UICorner_2.Parent = ToggleButton
			Buttom.Name = "Buttom"
			Buttom.Parent = ToggleButton
			Buttom.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
			Buttom.Size = UDim2.new(0, 15, 0, 15)
			UICorner_3.CornerRadius = UDim.new(0, 10)
			UICorner_3.Parent = Buttom
			Title.Name = "Title"
			Title.Parent = ToggleButton
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.Position = UDim2.new(-9.94285679, 0, -0.400000006, 0)
			Title.Size = UDim2.new(3.94285703, 0, 1.79999995, 0)
			Title.Font = Enum.Font.SourceSansLight
			Title.TextColor3 = Color3.fromRGB(0, 0, 0)
			Title.TextScaled = true
			Title.TextSize = 14.000
			Title.TextWrapped = true
			Title.TextXAlignment = Enum.TextXAlignment.Left
			Btn.Name = "Btn"
			Btn.Parent = ToggleButton
			Btn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Btn.BackgroundTransparency = 1.000
			Btn.Size = UDim2.new(1, 0, 1, 0)
			Btn.Font = Enum.Font.SourceSans
			Btn.Text = ""
			Btn.TextColor3 = Color3.fromRGB(0, 0, 0)
			Btn.TextSize = 14.000
			Btn.MouseButton1Click:Connect(function()
				if toggled == false and debounce == false then
					toggled = true
					debounce = true
					local tween = game:GetService("TweenService"):Create(Buttom,TweenInfo.new(.25),{Position = UDim2.new(0.6,0,0,0)})
					tween:Play()
					tween.Completed:Connect(function()
						debounce = false
					end)
					Callback(toggled)
				elseif toggled == true and debounce == false then
					toggled = false
					debounce = true
					local tween = game:GetService("TweenService"):Create(Buttom,TweenInfo.new(.25),{Position = UDim2.new(0,0,0,0)})
					tween:Play()
					tween.Completed:Connect(function()
						debounce = false
					end)
					Callback(toggled)
				end
			end)
		end
		return TabTable
	end
	return Ui
end

return NotMacOSUI
